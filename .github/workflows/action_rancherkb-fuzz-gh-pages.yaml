---
name: Build Search Website

on:
  workflow_call:
    secrets:
      app_id:
        description: "App ID of the application used to generate a token"
        required: true
      app_private_key:
        description: "Private key of the application used to generate a token"
        required: true
      gist_token:
        description: "User Token for custom badges creation"
        required: true
      sf_url:
        description: "SFDC URL"
        required: true
      sf_user:
        description: "SFDC User"
        required: true
      sf_pass:
        description: "SFDC Pass"
        required: true
      sf_token:
        description: "SFDC Token"
        required: true
      sf_ids_request:
        description: "SFDC SOQL Request"
        required: true

jobs:
  build_deploy:
    name: Build and Deploy SUSE-KB FuzzySearch
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.app_id }}
          private_key: ${{ secrets.app_private_key }}

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}
      - name: Setup Git config
        run: |
          git config user.name 'zagg-bot[bot]'
          git config user.email '121982232+zagg-bot[bot]@users.noreply.github.com'

      - name: Prepare Go env
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'

      - name: Build KBs Markdown
        env:
          sfURL: ${{ secrets.sf_url }}
          sfUser: ${{ secrets.sf_user }}
          sfPass: ${{ secrets.sf_pass }}
          sfToken: ${{ secrets.sf_token }}
          sfIdsRequest: ${{ secrets.sf_ids_request }}
        run: go run main.go

      - name: Prepare Build env
        uses: actions/setup-python@v6
        with:
          python-version: 3.x

      - name: Install MKDocs & Plugins
        env:
          VERSION: '9.6.20' # renovate: datasource=github-tags depName=squidfunk/mkdocs-material
        run: |
          pip install mkdocs-material==${VERSION}
          pip install mkdocs-awesome-pages-plugin

      - name: Build and Deploy website
        run: |
          cd website/
          mkdocs gh-deploy -b gh-pages

      - name: Link Checker
        id: lychee
        uses: lycheeverse/lychee-action@v2.6.1
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        with:
          args: --verbose --no-progress --exclude-all-private './website/docs/**/*.md'
          fail: false  
      - name: Create Issue From File
        if: steps.lychee.outputs.exit_code != 0
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Link Checker Report
          issue-number: 2
          content-filepath: ./lychee/out.md
          labels: report, automated issue
          token: ${{ steps.generate-token.outputs.token }}

      - name: Count the KB articles
        run: |
          echo "COUNT=$(find ./website/docs/kbs/* -type f | wc -l)" >> $GITHUB_ENV
      - name: Create the Count Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.gist_token }}
          gistID: 627f5c8e17e8deb5326a692079b04625
          filename: count-kbs.json
          style: for-the-badge
          namedLogo: Read the Docs
          logoColor: white
          label: KBs Number
          message: ${{ env.COUNT }}
          color: blue

      - name: Save KBs Markdown artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Kbs
          path: ./website/docs/kbs/
          retention-days: 7

  ai_setup:
    name: Create and Prepare AI Notebook
    runs-on: ubuntu-latest
    permissions:
      issues: write
    needs: build_deploy
    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.app_id }}
          private_key: ${{ secrets.app_private_key }}

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}
      - name: Setup Git config
        run: |
          git config user.name 'zagg-bot[bot]'
          git config user.email '121982232+zagg-bot[bot]@users.noreply.github.com'

      - name: Download saved Kbs Artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./website/docs/kbs/
          pattern: Kbs

      - name: Prepare node env
        uses: actions/setup-python@v6
        with:
          python-version: 3.x
      - run: |
          apt update && apt install -y curl jq

      - name: Prepare Source for NotebookLM                                                                                                                                                         
        run: |
          # Prepare KBs Markdown
          python ./apps/md-merge-ai.py ./website/docs/kbs knowledge-base.md \
            --context "This is a company knowledge base containing technical guides. It is supporting differant products like Rancher, Longhorn and RKE2." \
            --prompt "You are a senior IT Engineer. Analyse the request and generate a plan to help to solve the problem. You need to give details to the answer and examples to debug the situation. Give the source and the command line to help the troubleshooting. Do not guess or make up answers. If the information is not available, let us know in your answer."
            
          #Prepare Longhorn Markdown
          LONGHORN_LATEST=$(curl -sL https://api.github.com/repos/longhorn/longhorn/releases/latest | jq -r .tag_name | cut -c2-)
          git clone --no-checkout https://github.com/longhorn/website.git longhorn_website
          git -C longhorn_website sparse-checkout init --cone
          git -C longhorn_website sparse-checkout set content/docs/${LONGHORN_LATEST}/
          git -C longhorn_website checkout
          python ./apps/md-merge-ai.py longhorn_website/content/docs/${LONGHORN_LATEST} longhorn-website.md
            --context "this is the official Longhorn documentation. Longhorn is a cloud native distributed block storage system for Kubernetes."  \
            --prompt ""

          #Prepare RKE2 Markdown
          git clone --no-checkout https://github.com/rancher/rke2-docs.git rke2_website
          git -C rke2_website sparse-checkout init --cone
          git -C rke2_website sparse-checkout set docs/
          git -C rke2_website checkout
          python ./apps/md-merge-ai.py rke2_website/docs rke2-website.md
            --context ""This is the official RKE2 documentation. RKE2 is a Kubernetes distribution from Rancher."  \
            --prompt ""

          #Prepare Rancher Markdown
          RANCHER_LATEST=$(curl -sL https://api.github.com/repos/rancher/rancher/releases/latest | jq -r .tag_name | cut -c2-)
          git clone --no-checkout https://github.com/rancher/rancher-docs.git rancher_website
          git -C rancher_website sparse-checkout init --cone
          git -C rancher_website sparse-checkout set docs
          git -C rancher_website checkout v${RANCHER_LATEST}
          python ./apps/md-merge-ai.py rancher_website/docs rancher-website.md
            --context "This is the official Rancher documentation. Rancher is a Kubernetes management platform."  \
            --prompt ""

      - name: Push Input Markdown
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: Update AI Notebook Input
          commit_user_name: zagg-bot[bot]
          commit_user_email: 121982232+zagg-bot[bot]@users.noreply.github.com
          file_pattern: |
            ./knowledge-base.md
            ./*-website.md
          branch: ai-notebook
          token: ${{ steps.generate-token.outputs.token }}


