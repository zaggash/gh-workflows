---
name: Build Search Website

on:
  workflow_call:
    secrets:
      app_id:
        description: "App ID of the application used to generate a token"
        required: true
      app_private_key:
        description: "Private key of the application used to generate a token"
        required: true
      gist_token:
        description: "User Token for custom badges creation"
        required: true
      sf_url:
        description: "SFDC URL"
        required: true
      sf_user:
        description: "SFDC User"
        required: true
      sf_pass:
        description: "SFDC Pass"
        required: true
      sf_token:
        description: "SFDC Token"
        required: true
      sf_ids_request:
        description: "SFDC SOQL Request"
        required: true

jobs:
  build_deploy:
    name: Build and Deploy SUSE-KB FuzzySearch
    runs-on: ubuntu-latest
    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.app_id }}
          private_key: ${{ secrets.app_private_key }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}
      - name: Setup Git config
        run: |
          git config user.name 'zagg-bot[bot]'
          git config user.email '121982232+zagg-bot[bot]@users.noreply.github.com'

      - name: Prepare Go env
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'

      - name: Scrap Website
        env:
          sfURL: ${{ secrets.sf_url }}
          sfUser: ${{ secrets.sf_user }}
          sfPass: ${{ secrets.sf_pass }}
          sfToken: ${{ secrets.sf_token }}
          sfIdsRequest: ${{ secrets.sf_ids_request }}
        run: go run main.go

      - name: Prepare Build env
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install MKDocs & Plugins
        env:
          VERSION: '9.0.14' # renovate: datasource=github-tags depName=squidfunk/mkdocs-material
        run: |
          pip install mkdocs-material==${VERSION}
          pip install mkdocs-awesome-pages-plugin

      - name: Build and Deploy website
        run: |
          cd website/
          mkdocs gh-deploy -b gh-pages 

      - name: Link Checker
        id: lychee
        uses: lycheeverse/lychee-action@v1.6.1
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        with:
          args: --verbose --no-progress --exclude-all-private './website/docs/**/*.md'
      - name: Create Issue From File
        if: env.lychee_exit_code != 0
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: Link Checker Report
          issue-number: 2
          content-filepath: ./lychee/out.md
          labels: report, automated issue
          token: ${{ steps.generate-token.outputs.token }}
      
      - name: Count the KB articles
        run: |
          echo "COUNT=$(find ./website/docs/kbs/* -type f | wc -l)" >> $GITHUB_ENV
      - name: Create the Count Badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.gist_token }}
          gistID: 627f5c8e17e8deb5326a692079b04625
          filename: count-kbs.json
          style: for-the-badge
          namedLogo: Read the Docs
          logoColor: white
          label: KBs Number
          message: ${{ env.COUNT }}
          color: blue

